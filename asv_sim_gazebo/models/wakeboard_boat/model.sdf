<?xml version='1.0'?>
<!--
  Copyright (C) 2019  Rhys Mainwaring

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <https://www.gnu.org/licenses/>.
-->
<sdf version='1.6'>

  <model name='wakeboard_boat'>
    <pose>0 0 0 0 0 0</pose>
    <static>false</static>

    <plugin name="joy_to_ft" filename="libJoyToForceTorquePlugin.so">
      <topic>/joy</topic>
      <link_name>thruster_link</link_name>
      <force_gain>100000</force_gain>
      <yaw_gain>0.5</yaw_gain>
    </plugin>

    <plugin name="hydrodynamics" filename="libHydrodynamicsPlugin.so">
      <!-- Wave Model -->
      <wave_model>ocean_waves</wave_model>

      <!-- Hydrodynamics -->
      <damping_on>true</damping_on>
      <viscous_drag_on>true</viscous_drag_on>
      <pressure_drag_on>true</pressure_drag_on>

      <!-- Markers -->
      <markers>
        <update_rate>30</update_rate>
        <water_patch>false</water_patch>
        <waterline>false</waterline>
        <underwater_surface>false</underwater_surface>
      </markers>
    </plugin>

    <link name="base_link">
      <visual name="base_visual">
        <geometry>
          <mesh>
            <uri>model://wakeboard_boat/meshes/wakeboard_boat.stl</uri>
          </mesh>
        </geometry>
        <material>
          <script>
            <name>Gazebo/Gray</name>
          </script>
        </material>
      </visual>
      <collision name="base_collision">
        <geometry>
          <mesh>
            <uri>model://wakeboard_boat/meshes/wakeboard_boat_collision.stl</uri>
          </mesh>
        </geometry>
      </collision>
      <inertial>
        <pose>0 0 -0.3 0 0 0</pose>
        <mass>1000</mass>
        <inertia>
          <ixx>332</ixx>
          <ixy>0</ixy>
          <iyy>2255</iyy>
          <iyz>0</iyz>
          <izz>2446</izz>
        </inertia>
      </inertial>
    </link>

    <link name="thruster_link">
      <pose>-2.0 0 -0.5 0 0 0</pose>
      <visual name="thruster_visual">
        <geometry>
          <box>
            <size>0.2 0.1 0.5</size>
          </box>
        </geometry>
        <material>
          <script>
            <name>Gazebo/Black</name>
          </script>
        </material>
      </visual>
      <collision name="thruster_collision">
        <geometry>
          <box>
            <size>0.2 0.1 0.5</size>
          </box>
        </geometry>
      </collision>
      <inertial>
        <pose>0 0 0 0 0 0</pose>
        <mass>40</mass>
        <inertia>
          <ixx>1.66</ixx>
          <ixy>0</ixy>
          <iyy>1.86</iyy>
          <iyz>0</iyz>
          <izz>0.32</izz>
        </inertia>
      </inertial>
    </link>

    <joint type="fixed" name="base_thruster_joint">
      <pose>0 0 0 0 0 0</pose>
      <child>thruster_link</child>
      <parent>base_link</parent>
    </joint>

    <!-- Camera -->
    <link name="cam_link">
      <pose>1.0 0.0 0.5 0 0 0</pose>

      <visual name="cam_visual">
        <geometry>
          <box>
            <size>0.1 0.1 0.1</size>
          </box>
        </geometry>
        <material>
          <script>
            <uri>__default__</uri>
            <name>Gazebo/Red</name>
          </script>
        </material>
      </visual>

      <collision name="cam_collision">
        <geometry>
          <box>
            <size>0.1 0.1 0.1</size>
          </box>
        </geometry>
      </collision>
      
      <inertial>
        <pose>0 0 0 0 0 0</pose>
        <mass>1</mass>
        <inertia>
          <ixx>0.1</ixx>
          <ixy>0.0</ixy>
          <ixz>0.0</ixz>
          <iyy>0.1</iyy>
          <iyz>0.0</iyz>
          <izz>0.1</izz>
        </inertia>
      </inertial>

      <sensor type="camera" name="cam1">
        <always_on>1</always_on>>
        <update_rate>0</update_rate>
        <camera name="cam1">
          <horizontal_fov>1.5</horizontal_fov>
          <image>
            <width>800</width>
            <height>800</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
        </camera>
        <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>0.0</updateRate>
          <cameraName>rrbot/camera1</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <frameName>camera_link_optical</frameName>
          <hackBaseline>0.07</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
        </plugin>
      </sensor>

    </link>

    <joint type="fixed" name="base_cam_joint">
      <pose>0 0 0 0 0 0</pose>
      <child>cam_link</child>
      <parent>base_link</parent>
    </joint>

  </model>
</sdf>
